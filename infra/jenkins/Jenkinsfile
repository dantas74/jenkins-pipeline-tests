def steps
switch(gitBranch) {
    case 'main':
        return load 'scripts/StagesMain.groovy'
    break

    case 'develop':
        return load 'scripts/StagesDev.groovy'
    break

    case ~/^release\/.*$/:
        return load 'scripts/StagesRelease.groovy'
    break

    default:
        throw new Exception('Cannot do CI/CD on this branch')
    break
}

pipeline {
    agent any

    options {
        buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
        disableConcurrentBuilds()
    }

    stages {
        stage('Hello World') {
            echo 'Hello world'
        }
    }
}

def COLOR_MAP = [
    'SUCCESS': 'good',
    'FAILURE': 'danger',
]
