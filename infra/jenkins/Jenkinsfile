pipeline {
  agent any

  options {
    buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
    disableConcurrentBuilds()
  }

  parameters {
    string(
      name: 'payload',
      defaultValue: '{ "ref": "refs/head/develop", "pull_request": { "merged": false } }',
      description: 'Default parameter for github webhook')
  }

  stages {
    stage('Setup') {
      steps {
        script {
          def jsonObject = readJSON text: payload

          env.isGoingToDeploy = jsonObject.pull_request.merged

          env.environmentToCiCd = getEnvironmentForCiCd(jsonObject.ref)
        }
      }
    }

    stage('Dev Environment') {
      steps {
        build job: 'proesc-backend/ci-dev',
              parameters: [booleanParam(name: 'isGoingToDeploy', value: isGoingToDeploy)],
              wait: false,
              propagate: false
      }

      when {
        expression {
          environmentToCiCd == 'dev'
        }
      }
    }
  }
}

def getEnvironmentForCiCd(String ref) {
  switch(ref) {
    case 'refs/head/develop':
      return 'dev'
    break

    case ~/^refs\/head\/release.*$/:
      return 'qa'
    break

    case 'refs/head/main':
      return 'prod'
    break

    default:
      return ''
    break
  }
}